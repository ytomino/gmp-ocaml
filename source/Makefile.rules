.PHONY: all clean install uninstall

all \
: $(and $(OCAMLC),$(BUILDDIR)/$(LIBNAME).cma) \
  $(and $(OCAMLOPT),$(BUILDDIR)/$(LIBNAME).cmxa)

$(PAIRED_MLCMI):
	@$(and $(filter-out $(MLI_MODULES),$*),false)
	$(or \
		$(and $(OCAMLC), \
			$(OCAMLC) $(strip \
				-c $(OCAMLCFLAGS) -o $@ -I $(BUILDDIR) $(OCAML_INCLUDE_FLAGS) $<)), \
		$(and $(OCAMLOPT), \
			$(OCAMLOPT) $(strip \
				-c $(OCAMLOPTFLAGS) -o $@ -I $(BUILDDIR) $(OCAML_INCLUDE_FLAGS) $<)))

$(filter-out $(MLI:.mli=.cmi),$(PAIRED_MLCMI)): $(BUILDDIR)/%.cmi \
: %.mli | $(BUILDDIR)
$(filter $(MLI:.mli=.cmi),$(PAIRED_MLCMI)): $(BUILDDIR)/%.cmi \
: $(BUILDDIR)/%.mli | $(BUILDDIR)

define COMPILE_ML_TO_CMO
$(OCAMLC) $(strip \
	-c $(OCAMLCFLAGS) $1 -o $@ -I $(BUILDDIR) $(OCAML_INCLUDE_FLAGS) $<)
endef

$(PAIRED_MLCMI:.cmi=.cmo):
	@$(and $(filter-out $(MLI_MODULES),$*),false)
	$(call COMPILE_ML_TO_CMO,)

$(filter-out $(MLSRC:.ml=.cmo),$(PAIRED_MLCMI:.cmi=.cmo)): $(BUILDDIR)/%.cmo \
: %.ml $(BUILDDIR)/%.cmi
$(filter $(MLSRC:.ml=.cmo),$(PAIRED_MLCMI:.cmi=.cmo)): $(BUILDDIR)/%.cmo \
: $(BUILDDIR)/%.ml $(BUILDDIR)/%.cmi

$(MLONLY_MLCMI:.cmi=.cmo) $(MLCMOB): $(BUILDDIR)/%.cmo: %.ml | $(BUILDDIR)
	@$(and $(filter-out $(MLONLY_MODULES) $(ML_MODULESB),$*),false)
	$(call COMPILE_ML_TO_CMO,-w -70)

define COMPILE_ML_TO_CMX
$(OCAMLOPT) $(strip \
	-c $(OCAMLOPTFLAGS) $1 -o $@ -I $(BUILDDIR) $(OCAML_INCLUDE_FLAGS) $<)
endef

$(PAIRED_MLCMI:.cmi=.cmx):
	@$(and $(filter-out $(MLI_MODULES),$*),false)
	$(call COMPILE_ML_TO_CMX,)

$(filter-out $(MLSRC:.ml=.cmx),$(PAIRED_MLCMI:.cmi=.cmx)): $(BUILDDIR)/%.cmx \
: %.ml $(BUILDDIR)/%.cmi
$(filter $(MLSRC:.ml=.cmx),$(PAIRED_MLCMI:.cmi=.cmx)): $(BUILDDIR)/%.cmx \
: $(BUILDDIR)/%.ml $(BUILDDIR)/%.cmi

$(MLONLY_MLCMI:.cmi=.cmx): $(BUILDDIR)/%.cmx: %.ml | $(BUILDDIR)
	@$(and $(filter-out $(MLONLY_MODULES),$*),false)
	$(call COMPILE_ML_TO_CMX,-w -70)

$(MLONLY_MLCMI): $(BUILDDIR)/%.cmi \
: $(and $(OCAMLC),$(BUILDDIR)/%.cmo) $(and $(OCAMLOPT),$(BUILDDIR)/%.cmx)
	@$(and $(filter-out $(MLONLY_MODULES),$*),false)

$(MLCMIB): $(BUILDDIR)/%.cmi: $(BUILDDIR)/%.cmo
	@$(and $(filter-out $(ML_MODULESB),$*),false)

$(COBJ):
	$(CC) $(strip \
		-c $(OCAMLC_CFLAGS_ALL) -o $@ -isystem "$(OCAMLLIBDIR)" $(C_INCLUDE_FLAGS) $<)

$(filter-out $(CSRC:.c=.o),$(COBJ)): $(BUILDDIR)/%.o: %.c | $(BUILDDIR)
$(filter $(CSRC:.c=.o),$(COBJ)): $(BUILDDIR)/%.o: $(BUILDDIR)/%.c | $(BUILDDIR)

$(BUILDDIR)/$(LIBNAME).cma: $(MLCMO) $(MLCMOB) $(CDLL)
	$(OCAMLC) -a -o $@ $(MLCMO) $(MLCMOB) $(DLLIB) $(CCLIB)

$(BUILDDIR)/$(LIBNAME).cmxa: $(MLCMX) $(CSLL)
	$(OCAMLOPT) -a -o $@ $(MLCMX) $(SLLIB) $(CCLIB)

$(CDLL): $(COBJ)
	$(strip $(MKDLL_ALL) -o $@ $^ $(LDLIB))

$(CSLL): $(COBJ)
	$(ARCMD) rcs $@ $^

$(BUILDDIR):
	mkdir -p $@

clean:
	-rm $(strip \
		$(filter $(BUILDDIR)/%,$(MLI) $(MLSRC) $(CSRC)) \
		$(MLCMI) \
		$(MLCMIB) $(BUILDDIR)/$(LIBNAME).cma $(CDLL) \
		$(MLCMX) $(BUILDDIR)/$(LIBNAME).cmxa $(BUILDDIR)/$(LIBNAME).a $(CSLL) \
		$(MLCMO) $(MLCMOB) $(MLOBJ) $(COBJ))
	-rmdir $(BUILDDIR)

install \
: all \
| $(filter-out $(patsubst %/,%,$(dir $(DEST_DLLDIR))),$(DEST_PKGDIR)) \
  $(DEST_DLLDIR)
	cd $(DEST_PKGDIR) && $(INSTALL_DATA) $(strip \
		$(addprefix $(patsubst $(DEST_PKGDIR)/%,%,$(abspath $(BUILDDIR)))/, \
			$(_INSTALLED_FILES)) .)
	$(and $(OCAMLC),$(STUBLIBNAME), \
		cd $(DEST_DLLDIR) && $(INSTALL_PROGRAM) $(strip \
			$(addprefix $(patsubst $(dir $(DEST_DLLDIR))%,../%,$(abspath $(BUILDDIR)))/, \
				$(_CDLL)) \
			.))

$(DEST_PKGDIR) $(DEST_DLLDIR):
	mkdir -p $@

uninstall:
	-rm $(strip \
		$(addprefix $(DEST_PKGDIR)/,$(_INSTALLED_FILES)) \
		$(addprefix $(DEST_DLLDIR)/,$(_CDLL)))
